<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Solid.Http.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Solid.Http.Abstractions.IDeserializer">
            <summary>
            Deserializer
            </summary>
        </member>
        <member name="M:Solid.Http.Abstractions.IDeserializer.CanDeserialize(System.String)">
            <summary>
            Checks whether this deserializer can deserialize the specified mime type
            </summary>
            <param name="mimeType">A mime type</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Solid.Http.Abstractions.IDeserializer.DeserializeAsync``1(System.Net.Http.HttpContent)">
            <summary>
            Deserializes the HttpContext to an object
            </summary>
            <typeparam name="T">The object type</typeparam>
            <param name="content">The http content from the HttpResponseMessage</param>
            <returns>An awaitable task</returns>
        </member>
        <member name="T:Solid.Http.Abstractions.IHttpClientProvider">
            <summary>
            A provider that providers HttpClients
            </summary>
        </member>
        <member name="M:Solid.Http.Abstractions.IHttpClientProvider.Get(System.Uri)">
            <summary>
            Gets an HttpClient using the request url
            </summary>
            <param name="url">The request url</param>
            <returns>An HttpClient</returns>
        </member>
        <member name="T:Solid.Http.Abstractions.IResponseDeserializerFactory">
            <summary>
            The ISolidHttpSerializer interface
            </summary>
        </member>
        <member name="M:Solid.Http.Abstractions.IResponseDeserializerFactory.CreateDeserializer``1">
            <summary>
            Creates a deserializer
            </summary>
            <typeparam name="T">The type to deserialize to</typeparam>
            <returns>A deserializer which takes in HttpContent and returns a Task of type T</returns>
        </member>
        <member name="T:Solid.Http.Abstractions.ISolidHttpBuilder">
            <summary>
            A builder used to configure Solid.Http.Builder
            </summary>
        </member>
        <member name="P:Solid.Http.Abstractions.ISolidHttpBuilder.Services">
            <summary>
            The service collection
            </summary>
        </member>
        <member name="P:Solid.Http.Abstractions.ISolidHttpBuilder.Properties">
            <summary>
            Properties that can be used in extensions
            </summary>
        </member>
        <member name="T:Solid.Http.Abstractions.ISolidHttpClient">
            <summary>
            A SolidHttpClient that is used to perform create SolidHttpRequests. This class is designed be extended using extension methods.
            </summary>
        </member>
        <member name="P:Solid.Http.Abstractions.ISolidHttpClient.Deserializers">
            <summary>
            The deserializers this ISolidHttpClient can use
            </summary>
        </member>
        <member name="M:Solid.Http.Abstractions.ISolidHttpClient.AddProperty``1(System.String,``0)">
            <summary>
            Adds a property to the client that can be used in extensions methods
            </summary>
            <typeparam name="T">The type of parameter</typeparam>
            <param name="key">The parameter key</param>
            <param name="value">The parameter value</param>
        </member>
        <member name="M:Solid.Http.Abstractions.ISolidHttpClient.GetProperty``1(System.String)">
            <summary>
            Gets a property from the client
            </summary>
            <typeparam name="T">The type of parameter</typeparam>
            <param name="key">The parameter key</param>
            <returns>The parameter</returns>
        </member>
        <member name="M:Solid.Http.Abstractions.ISolidHttpClient.PerformRequestAsync(System.Net.Http.HttpMethod,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Perform an http request
            </summary>
            <param name="method">The http method for the request</param>
            <param name="url">The url to be requested</param>
            <param name="cancellationToken">The cancellation token for the request</param>
            <returns>An awaitable ISolidHttpRequest</returns>
        </member>
        <member name="M:Solid.Http.Abstractions.ISolidHttpClient.OnRequestCreated(System.Action{System.IServiceProvider,Solid.Http.Abstractions.ISolidHttpRequest})">
            <summary>
            Add a handler to be run when Solid.Http request object is created.
            </summary>
            <param name="handler">The handler to be run</param>
            <returns>ISolidHttpClient</returns>
        </member>
        <member name="T:Solid.Http.Abstractions.ISolidHttpClientFactory">
            <summary>
            The ISolidHttpClientFactory interface
            </summary>
        </member>
        <member name="P:Solid.Http.Abstractions.ISolidHttpClientFactory.Configuration">
            <summary>
            The application configuration which can be used in extension methods
            </summary>
        </member>
        <member name="M:Solid.Http.Abstractions.ISolidHttpClientFactory.Create">
            <summary>
            Creates a SolidHttpClient
            </summary>
            <returns>SolidHttpClient</returns>
        </member>
        <member name="T:Solid.Http.Abstractions.ISolidHttpCoreBuilder">
            <summary>
            The ISolidHttpBuilder interface
            </summary>
        </member>
        <member name="T:Solid.Http.Abstractions.ISolidHttpRequest">
            <summary>
            The extendable request
            </summary>
        </member>
        <member name="P:Solid.Http.Abstractions.ISolidHttpRequest.Client">
            <summary>
            The SolidHttpClient that was used to generate the request
            </summary>
        </member>
        <member name="P:Solid.Http.Abstractions.ISolidHttpRequest.BaseRequest">
            <summary>
            The request message that will be sent to an HttpClient
            </summary>
        </member>
        <member name="P:Solid.Http.Abstractions.ISolidHttpRequest.BaseResponse">
            <summary>
            The response message that will come from an HttpClient
            </summary>
        </member>
        <member name="P:Solid.Http.Abstractions.ISolidHttpRequest.CancellationToken">
            <summary>
            The cancellation token
            </summary>
        </member>
        <member name="M:Solid.Http.Abstractions.ISolidHttpRequest.OnRequest(System.Func{System.IServiceProvider,System.Net.Http.HttpRequestMessage,System.Threading.Tasks.Task})">
            <summary>
            Add an event handler to be run just before the request is sent
            </summary>
            <param name="handler">The handler to be run</param>
            <returns>The Solid.Http request object</returns>
        </member>
        <member name="M:Solid.Http.Abstractions.ISolidHttpRequest.OnResponse(System.Func{System.IServiceProvider,System.Net.Http.HttpResponseMessage,System.Threading.Tasks.Task})">
            <summary>
            Add an event to be run the moment the response is received
            </summary>
            <param name="handler">The handler to be run</param>
            <returns>The Solid.Http request object</returns>
        </member>
        <member name="M:Solid.Http.Abstractions.ISolidHttpRequest.GetAwaiter">
            <summary>
            Get the task awaiter to make this request directly awaitable
            </summary>
            <returns>A task awaiter</returns>
        </member>
    </members>
</doc>
